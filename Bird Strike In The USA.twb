<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0515.0324                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0515.0324)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Bird Strikes (Bird Strikes data)' inline='true' name='federated.0880cgg0sbww3217r6jhq1f4rrxv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Bird Strikes data' name='excel-direct.0bgg74a1mdqmcw1ciyrf00o67s9j'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/samiy/Downloads/Bird Strikes data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0bgg74a1mdqmcw1ciyrf00o67s9j' name='Bird Strikes' table='[&apos;Bird Strikes$&apos;]' type='table'>
          <columns gridOrigin='A1:Z10001:no:A1:Z10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='Record ID' ordinal='0' />
            <column datatype='string' name='Aircraft: Type' ordinal='1' />
            <column datatype='string' name='Airport: Name' ordinal='2' />
            <column datatype='string' name='Altitude bin' ordinal='3' />
            <column datatype='string' name='Aircraft: Make/Model' ordinal='4' />
            <column datatype='string' name='Wildlife: Number struck' ordinal='5' />
            <column datatype='integer' name='Wildlife: Number Struck Actual' ordinal='6' />
            <column datatype='string' name='Effect: Impact to flight' ordinal='7' />
            <column datatype='date' name='FlightDate' ordinal='8' />
            <column datatype='string' name='Effect: Indicated Damage' ordinal='9' />
            <column datatype='integer' name='Aircraft: Number of engines?' ordinal='10' />
            <column datatype='string' name='Aircraft: Airline/Operator' ordinal='11' />
            <column datatype='string' name='Origin State' ordinal='12' />
            <column datatype='string' name='When: Phase of flight' ordinal='13' />
            <column datatype='string' name='Conditions: Precipitation' ordinal='14' />
            <column datatype='boolean' name='Remains of wildlife collected?' ordinal='15' />
            <column datatype='boolean' name='Remains of wildlife sent to Smithsonian' ordinal='16' />
            <column datatype='string' name='Remarks' ordinal='17' />
            <column datatype='string' name='Wildlife: Size' ordinal='18' />
            <column datatype='string' name='Conditions: Sky' ordinal='19' />
            <column datatype='string' name='Wildlife: Species' ordinal='20' />
            <column datatype='string' name='Pilot warned of birds or wildlife?' ordinal='21' />
            <column datatype='integer' name='Cost: Total $' ordinal='22' />
            <column datatype='integer' name='Feet above ground' ordinal='23' />
            <column datatype='integer' name='Number of people injured' ordinal='24' />
            <column datatype='string' name='Is Aircraft Large?' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0bgg74a1mdqmcw1ciyrf00o67s9j' name='Bird Strikes' table='[&apos;Bird Strikes$&apos;]' type='table'>
          <columns gridOrigin='A1:Z10001:no:A1:Z10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='Record ID' ordinal='0' />
            <column datatype='string' name='Aircraft: Type' ordinal='1' />
            <column datatype='string' name='Airport: Name' ordinal='2' />
            <column datatype='string' name='Altitude bin' ordinal='3' />
            <column datatype='string' name='Aircraft: Make/Model' ordinal='4' />
            <column datatype='string' name='Wildlife: Number struck' ordinal='5' />
            <column datatype='integer' name='Wildlife: Number Struck Actual' ordinal='6' />
            <column datatype='string' name='Effect: Impact to flight' ordinal='7' />
            <column datatype='date' name='FlightDate' ordinal='8' />
            <column datatype='string' name='Effect: Indicated Damage' ordinal='9' />
            <column datatype='integer' name='Aircraft: Number of engines?' ordinal='10' />
            <column datatype='string' name='Aircraft: Airline/Operator' ordinal='11' />
            <column datatype='string' name='Origin State' ordinal='12' />
            <column datatype='string' name='When: Phase of flight' ordinal='13' />
            <column datatype='string' name='Conditions: Precipitation' ordinal='14' />
            <column datatype='boolean' name='Remains of wildlife collected?' ordinal='15' />
            <column datatype='boolean' name='Remains of wildlife sent to Smithsonian' ordinal='16' />
            <column datatype='string' name='Remarks' ordinal='17' />
            <column datatype='string' name='Wildlife: Size' ordinal='18' />
            <column datatype='string' name='Conditions: Sky' ordinal='19' />
            <column datatype='string' name='Wildlife: Species' ordinal='20' />
            <column datatype='string' name='Pilot warned of birds or wildlife?' ordinal='21' />
            <column datatype='integer' name='Cost: Total $' ordinal='22' />
            <column datatype='integer' name='Feet above ground' ordinal='23' />
            <column datatype='integer' name='Number of people injured' ordinal='24' />
            <column datatype='string' name='Is Aircraft Large?' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z10001:no:A1:Z10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Record ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Record ID]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Record ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft: Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Aircraft: Type]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Aircraft: Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport: Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Airport: Name]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Airport: Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Altitude bin</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Altitude bin]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Altitude bin</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft: Make/Model</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Aircraft: Make/Model]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Aircraft: Make/Model</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Number struck</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Number struck]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Wildlife: Number struck</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Number Struck Actual</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Wildlife: Number Struck Actual]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Wildlife: Number Struck Actual</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Effect: Impact to flight</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Effect: Impact to flight]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Effect: Impact to flight</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[FlightDate]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>FlightDate</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Effect: Indicated Damage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Effect: Indicated Damage]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Effect: Indicated Damage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft: Number of engines?</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Aircraft: Number of engines?]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Aircraft: Number of engines?</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft: Airline/Operator</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Aircraft: Airline/Operator]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Aircraft: Airline/Operator</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin State]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Origin State</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>When: Phase of flight</remote-name>
            <remote-type>130</remote-type>
            <local-name>[When: Phase of flight]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>When: Phase of flight</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Conditions: Precipitation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Conditions: Precipitation]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Conditions: Precipitation</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Remains of wildlife collected?</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Remains of wildlife collected?]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Remains of wildlife collected?</remote-alias>
            <ordinal>15</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Remains of wildlife sent to Smithsonian</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Remains of wildlife sent to Smithsonian]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Remains of wildlife sent to Smithsonian</remote-alias>
            <ordinal>16</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Remarks</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Remarks]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Remarks</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Size]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Wildlife: Size</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Conditions: Sky</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Conditions: Sky]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Conditions: Sky</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Wildlife: Species</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pilot warned of birds or wildlife?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Pilot warned of birds or wildlife?]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Pilot warned of birds or wildlife?</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost: Total $</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cost: Total $]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Cost: Total $</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Feet above ground</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Feet above ground]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Feet above ground</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of people injured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of people injured]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Number of people injured</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Is Aircraft Large?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Is Aircraft Large?]</local-name>
            <parent-name>[Bird Strikes]</parent-name>
            <remote-alias>Is Aircraft Large?</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Aircraft: Airline/Operator]' role='dimension' type='nominal' />
      <column caption='index' datatype='integer' name='[Calculation_848928564440805376]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='index()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Effect: Impact to flight]' role='dimension' type='nominal' />
      <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Record ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[When: Phase of flight]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Bird Strikes' datatype='table' name='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' role='measure' type='quantitative' />
      <column-instance column='[Effect: Impact to flight]' derivation='None' name='[none:Effect: Impact to flight:nk]' pivot='key' type='nominal' />
      <column-instance column='[When: Phase of flight]' derivation='None' name='[none:When: Phase of flight:nk]' pivot='key' type='nominal' />
      <group caption='Top 10 Airlines' name='[Aircraft: Airline/Operator Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Aircraft: Airline/Operator]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/samiy/AppData/Local/Temp/TableauTemp/#TableauTemp_1bylpr80to7wgy17jjep10o1yz5r.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/30/2024 12:51:37 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Record ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Record ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Record ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Bird Strikes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25558</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Aircraft: Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Aircraft: Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Aircraft: Type</remote-alias>
              <ordinal>1</ordinal>
              <family>Bird Strikes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Airport: Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Airport: Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Airport: Name</remote-alias>
              <ordinal>2</ordinal>
              <family>Bird Strikes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>820</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Altitude bin</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Altitude bin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Altitude bin</remote-alias>
              <ordinal>3</ordinal>
              <family>Bird Strikes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Aircraft: Make/Model</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Aircraft: Make/Model]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Aircraft: Make/Model</remote-alias>
              <ordinal>4</ordinal>
              <family>Bird Strikes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>346</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Wildlife: Number struck</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Wildlife: Number struck]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Wildlife: Number struck</remote-alias>
              <ordinal>5</ordinal>
              <family>Bird Strikes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Wildlife: Number Struck Actual</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Wildlife: Number Struck Actual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Wildlife: Number Struck Actual</remote-alias>
              <ordinal>6</ordinal>
              <family>Bird Strikes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Effect: Impact to flight</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Effect: Impact to flight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Effect: Impact to flight</remote-alias>
              <ordinal>7</ordinal>
              <family>Bird Strikes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FlightDate</remote-name>
              <remote-type>133</remote-type>
              <local-name>[FlightDate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FlightDate</remote-alias>
              <ordinal>8</ordinal>
              <family>Bird Strikes</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>4855</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Effect: Indicated Damage</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Effect: Indicated Damage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Effect: Indicated Damage</remote-alias>
              <ordinal>9</ordinal>
              <family>Bird Strikes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Aircraft: Number of engines?</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Aircraft: Number of engines?]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Aircraft: Number of engines?</remote-alias>
              <ordinal>10</ordinal>
              <family>Bird Strikes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Aircraft: Airline/Operator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Aircraft: Airline/Operator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Aircraft: Airline/Operator</remote-alias>
              <ordinal>11</ordinal>
              <family>Bird Strikes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>253</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Origin State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Origin State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Origin State</remote-alias>
              <ordinal>12</ordinal>
              <family>Bird Strikes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>81</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>When: Phase of flight</remote-name>
              <remote-type>129</remote-type>
              <local-name>[When: Phase of flight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>When: Phase of flight</remote-alias>
              <ordinal>13</ordinal>
              <family>Bird Strikes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Conditions: Precipitation</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Conditions: Precipitation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Conditions: Precipitation</remote-alias>
              <ordinal>14</ordinal>
              <family>Bird Strikes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Remains of wildlife collected?</remote-name>
              <remote-type>11</remote-type>
              <local-name>[Remains of wildlife collected?]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Remains of wildlife collected?</remote-alias>
              <ordinal>15</ordinal>
              <family>Bird Strikes</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Remains of wildlife sent to Smithsonian</remote-name>
              <remote-type>11</remote-type>
              <local-name>[Remains of wildlife sent to Smithsonian]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Remains of wildlife sent to Smithsonian</remote-alias>
              <ordinal>16</ordinal>
              <family>Bird Strikes</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Remarks</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Remarks]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Remarks</remote-alias>
              <ordinal>17</ordinal>
              <family>Bird Strikes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8762</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Wildlife: Size</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Wildlife: Size]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Wildlife: Size</remote-alias>
              <ordinal>18</ordinal>
              <family>Bird Strikes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Conditions: Sky</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Conditions: Sky]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Conditions: Sky</remote-alias>
              <ordinal>19</ordinal>
              <family>Bird Strikes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Wildlife: Species</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Wildlife: Species]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Wildlife: Species</remote-alias>
              <ordinal>20</ordinal>
              <family>Bird Strikes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>350</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pilot warned of birds or wildlife?</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Pilot warned of birds or wildlife?]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pilot warned of birds or wildlife?</remote-alias>
              <ordinal>21</ordinal>
              <family>Bird Strikes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cost: Total $</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Cost: Total $]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cost: Total $</remote-alias>
              <ordinal>22</ordinal>
              <family>Bird Strikes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>789</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Feet above ground</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Feet above ground]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Feet above ground</remote-alias>
              <ordinal>23</ordinal>
              <family>Bird Strikes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>204</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of people injured</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of people injured]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of people injured</remote-alias>
              <ordinal>24</ordinal>
              <family>Bird Strikes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Is Aircraft Large?</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Is Aircraft Large?]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Is Aircraft Large?</remote-alias>
              <ordinal>25</ordinal>
              <family>Bird Strikes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:When: Phase of flight:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Landing Roll&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Descent&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Take-off run&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Climb&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Parked&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Approach&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Taxi&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Effect: Impact to flight:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;None&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Engine Shut Down&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Precautionary Landing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aborted Take-off&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Bird Strikes' id='Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8'>
            <properties context=''>
              <relation connection='excel-direct.0bgg74a1mdqmcw1ciyrf00o67s9j' name='Bird Strikes' table='[&apos;Bird Strikes$&apos;]' type='table'>
                <columns gridOrigin='A1:Z10001:no:A1:Z10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Record ID' ordinal='0' />
                  <column datatype='string' name='Aircraft: Type' ordinal='1' />
                  <column datatype='string' name='Airport: Name' ordinal='2' />
                  <column datatype='string' name='Altitude bin' ordinal='3' />
                  <column datatype='string' name='Aircraft: Make/Model' ordinal='4' />
                  <column datatype='string' name='Wildlife: Number struck' ordinal='5' />
                  <column datatype='integer' name='Wildlife: Number Struck Actual' ordinal='6' />
                  <column datatype='string' name='Effect: Impact to flight' ordinal='7' />
                  <column datatype='date' name='FlightDate' ordinal='8' />
                  <column datatype='string' name='Effect: Indicated Damage' ordinal='9' />
                  <column datatype='integer' name='Aircraft: Number of engines?' ordinal='10' />
                  <column datatype='string' name='Aircraft: Airline/Operator' ordinal='11' />
                  <column datatype='string' name='Origin State' ordinal='12' />
                  <column datatype='string' name='When: Phase of flight' ordinal='13' />
                  <column datatype='string' name='Conditions: Precipitation' ordinal='14' />
                  <column datatype='boolean' name='Remains of wildlife collected?' ordinal='15' />
                  <column datatype='boolean' name='Remains of wildlife sent to Smithsonian' ordinal='16' />
                  <column datatype='string' name='Remarks' ordinal='17' />
                  <column datatype='string' name='Wildlife: Size' ordinal='18' />
                  <column datatype='string' name='Conditions: Sky' ordinal='19' />
                  <column datatype='string' name='Wildlife: Species' ordinal='20' />
                  <column datatype='string' name='Pilot warned of birds or wildlife?' ordinal='21' />
                  <column datatype='integer' name='Cost: Total $' ordinal='22' />
                  <column datatype='integer' name='Feet above ground' ordinal='23' />
                  <column datatype='integer' name='Number of people injured' ordinal='24' />
                  <column datatype='string' name='Is Aircraft Large?' ordinal='25' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Altitude'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes data)' name='federated.0880cgg0sbww3217r6jhq1f4rrxv' />
          </datasources>
          <datasource-dependencies datasource='federated.0880cgg0sbww3217r6jhq1f4rrxv'>
            <column datatype='integer' name='[Feet above ground]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Record ID]' role='dimension' type='ordinal' />
            <column-instance column='[Feet above ground]' derivation='Attribute' name='[attr:Feet above ground:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Record ID]' derivation='None' name='[none:Record ID:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='389' />
            <format attr='height' value='455' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[attr:Feet above ground:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7251380681991577' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Record ID:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{81D8BBA7-C662-4CCC-8B1E-7FB74E464322}' />
    </worksheet>
    <worksheet name='Avg Altitude'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes data)' name='federated.0880cgg0sbww3217r6jhq1f4rrxv' />
          </datasources>
          <datasource-dependencies datasource='federated.0880cgg0sbww3217r6jhq1f4rrxv'>
            <column datatype='string' name='[Altitude bin]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Feet above ground]' role='measure' type='quantitative' />
            <column datatype='string' name='[When: Phase of flight]' role='dimension' type='nominal' />
            <column-instance column='[Feet above ground]' derivation='Avg' name='[avg:Feet above ground:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Altitude bin]' derivation='None' name='[none:Altitude bin:nk]' pivot='key' type='nominal' />
            <column-instance column='[When: Phase of flight]' derivation='None' name='[none:When: Phase of flight:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Altitude bin:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Altitude bin:nk]' />
              <groupfilter function='member' level='[none:Altitude bin:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Altitude bin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:When: Phase of flight:nk]' value='109' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[avg:Feet above ground:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#00aaff' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[avg:Feet above ground:qk]</rows>
        <cols>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:When: Phase of flight:nk]</cols>
      </table>
      <simple-id uuid='{C623E769-0B5D-4BC7-B150-1D257F4487BD}' />
    </worksheet>
    <worksheet name='Bird Strikes'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes data)' name='federated.0880cgg0sbww3217r6jhq1f4rrxv' />
          </datasources>
          <datasource-dependencies datasource='federated.0880cgg0sbww3217r6jhq1f4rrxv'>
            <_.fcp.ObjectModelTableType.false...column caption='Bird Strikes' datatype='integer' name='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Bird Strikes' datatype='table' name='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]</rows>
        <cols>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Origin State:nk]</cols>
      </table>
      <simple-id uuid='{9CD4F01B-4238-4748-A982-761942EB0734}' />
    </worksheet>
    <worksheet name='Effect at different altitude'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes data)' name='federated.0880cgg0sbww3217r6jhq1f4rrxv' />
          </datasources>
          <datasource-dependencies datasource='federated.0880cgg0sbww3217r6jhq1f4rrxv'>
            <column datatype='string' name='[Effect: Impact to flight]' role='dimension' type='nominal' />
            <column datatype='string' name='[Effect: Indicated Damage]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Feet above ground]' role='measure' type='quantitative' />
            <column-instance column='[Feet above ground]' derivation='Attribute' name='[attr:Feet above ground:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Effect: Impact to flight]' derivation='None' name='[none:Effect: Impact to flight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Indicated Damage]' derivation='None' name='[none:Effect: Indicated Damage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Feet above ground]' derivation='None' name='[none:Feet above ground:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[attr:Feet above ground:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[attr:Feet above ground:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Indicated Damage:nk]' value='82' />
            <format attr='width' field='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Impact to flight:nk]' value='103' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Impact to flight:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Feet above ground:qk]</rows>
        <cols>([federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Indicated Damage:nk] / [federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Impact to flight:nk])</cols>
      </table>
      <simple-id uuid='{19CE943F-2FBD-4D40-8003-DFCFB9404489}' />
    </worksheet>
    <worksheet name='Impact On Flights'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes data)' name='federated.0880cgg0sbww3217r6jhq1f4rrxv' />
          </datasources>
          <datasource-dependencies datasource='federated.0880cgg0sbww3217r6jhq1f4rrxv'>
            <column datatype='string' name='[Effect: Impact to flight]' role='dimension' type='nominal' />
            <column datatype='string' name='[Effect: Indicated Damage]' role='dimension' type='nominal' />
            <column-instance column='[Effect: Impact to flight]' derivation='Count' name='[cnt:Effect: Impact to flight:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Effect: Impact to flight]' derivation='None' name='[none:Effect: Impact to flight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Indicated Damage]' derivation='None' name='[none:Effect: Indicated Damage:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Impact to flight:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Effect: Impact to flight:nk]' />
              <groupfilter function='member' level='[none:Effect: Impact to flight:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Impact to flight:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Indicated Damage:nk]' value='102' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[cnt:Effect: Impact to flight:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[cnt:Effect: Impact to flight:qk]</rows>
        <cols>([federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Impact to flight:nk] / [federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Indicated Damage:nk])</cols>
      </table>
      <simple-id uuid='{7F9FCEBF-B833-4F90-BDB2-A42B23FBAEF5}' />
    </worksheet>
    <worksheet name='Phase Of Flight'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes data)' name='federated.0880cgg0sbww3217r6jhq1f4rrxv' />
          </datasources>
          <datasource-dependencies datasource='federated.0880cgg0sbww3217r6jhq1f4rrxv'>
            <_.fcp.ObjectModelTableType.false...column caption='Bird Strikes' datatype='integer' name='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' role='measure' type='quantitative' />
            <column datatype='string' name='[When: Phase of flight]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Bird Strikes' datatype='table' name='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[When: Phase of flight]' derivation='None' name='[none:When: Phase of flight:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:When: Phase of flight:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:When: Phase of flight:nk]' value='159' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]</rows>
        <cols>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:When: Phase of flight:nk]</cols>
      </table>
      <simple-id uuid='{70425163-AF62-43C2-B805-0B5B6775B389}' />
    </worksheet>
    <worksheet name='Pilots and Prior Warning'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes data)' name='federated.0880cgg0sbww3217r6jhq1f4rrxv' />
          </datasources>
          <datasource-dependencies datasource='federated.0880cgg0sbww3217r6jhq1f4rrxv'>
            <column datatype='string' name='[Effect: Indicated Damage]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Bird Strikes' datatype='integer' name='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pilot warned of birds or wildlife?]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Bird Strikes' datatype='table' name='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Effect: Indicated Damage]' derivation='None' name='[none:Effect: Indicated Damage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pilot warned of birds or wildlife?]' derivation='None' name='[none:Pilot warned of birds or wildlife?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Pilot warned of birds or wildlife?:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Pilot warned of birds or wildlife?:nk]' />
              <groupfilter function='member' level='[none:Pilot warned of birds or wildlife?:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Pilot warned of birds or wildlife?:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Indicated Damage:nk]' value='150' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]</rows>
        <cols>([federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Pilot warned of birds or wildlife?:nk] / [federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Indicated Damage:nk])</cols>
      </table>
      <simple-id uuid='{695E4AB7-76C4-4640-AD5C-01D75C5DCAB6}' />
    </worksheet>
    <worksheet name='Pilots and Prior Warning (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes data)' name='federated.0880cgg0sbww3217r6jhq1f4rrxv' />
          </datasources>
          <datasource-dependencies datasource='federated.0880cgg0sbww3217r6jhq1f4rrxv'>
            <column datatype='string' name='[Effect: Impact to flight]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Bird Strikes' datatype='integer' name='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pilot warned of birds or wildlife?]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Bird Strikes' datatype='table' name='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Effect: Impact to flight]' derivation='None' name='[none:Effect: Impact to flight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pilot warned of birds or wildlife?]' derivation='None' name='[none:Pilot warned of birds or wildlife?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Pilot warned of birds or wildlife?:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Pilot warned of birds or wildlife?:nk]' />
              <groupfilter function='member' level='[none:Pilot warned of birds or wildlife?:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Pilot warned of birds or wildlife?:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Impact to flight:nk]' value='109' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]</rows>
        <cols>([federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Pilot warned of birds or wildlife?:nk] / [federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Impact to flight:nk])</cols>
      </table>
      <simple-id uuid='{4974DE1A-DD97-4217-91DC-4F29EF4EF26C}' />
    </worksheet>
    <worksheet name='Top 10 US Airlines'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes data)' name='federated.0880cgg0sbww3217r6jhq1f4rrxv' />
          </datasources>
          <datasource-dependencies datasource='federated.0880cgg0sbww3217r6jhq1f4rrxv'>
            <column datatype='string' name='[Aircraft: Airline/Operator]' role='dimension' type='nominal' />
            <column caption='index' datatype='integer' name='[Calculation_848928564440805376]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='index()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='Bird Strikes' datatype='integer' name='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Bird Strikes' datatype='table' name='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Aircraft: Airline/Operator]' derivation='None' name='[none:Aircraft: Airline/Operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_848928564440805376]' derivation='User' name='[usr:Calculation_848928564440805376:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Origin State:nk]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Origin State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Alberta&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;British Columbia&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;N/A&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Newfoundland and Labrador&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Ontario&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Prince Edward Island&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Puerto Rico&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Quebec&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Saskatchewan&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Virgin Islands&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[usr:Calculation_848928564440805376:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='10' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Aircraft: Airline/Operator:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Origin State:nk]</column>
            <column>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[usr:Calculation_848928564440805376:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='389' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Aircraft: Airline/Operator:nk]</rows>
        <cols>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]</cols>
      </table>
      <simple-id uuid='{72F766BD-E0A2-439A-BC2A-57D4DAB0B269}' />
    </worksheet>
    <worksheet name='Top 50 Airports'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes data)' name='federated.0880cgg0sbww3217r6jhq1f4rrxv' />
          </datasources>
          <datasource-dependencies datasource='federated.0880cgg0sbww3217r6jhq1f4rrxv'>
            <column datatype='string' name='[Airport: Name]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Bird Strikes' datatype='integer' name='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' role='measure' type='quantitative' />
            <column caption='index' datatype='integer' name='[Calculation_848928564440805376]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='index()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='Bird Strikes' datatype='table' name='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Airport: Name]' derivation='None' name='[none:Airport: Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_848928564440805376]' derivation='User' name='[usr:Calculation_848928564440805376:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Airport: Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ATLANTA INTL&quot;</bucket>
              <bucket>&quot;AUSTIN-BERGSTROM INTL&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;AIRBORNE AIRPARK&quot;</bucket>
              <bucket>&quot;ALBANY INTL&quot;</bucket>
              <bucket>&quot;ALBUQUERQUE INTL&quot;</bucket>
              <bucket>&quot;ATLANTIC CITY INTL&quot;</bucket>
              <bucket>&quot;ADAMS FIELD ARPT&quot;</bucket>
              <bucket>&quot;ADDISON&quot;</bucket>
              <bucket>&quot;ABRAHAM LINCOLN CAPITAL ARPT&quot;</bucket>
              <bucket>&quot;ASHEVILLE REGIONAL ARPT&quot;</bucket>
              <bucket>&quot;AKRON-CANTON MUNICIPAL&quot;</bucket>
              <bucket>&quot;AUSTIN STRAUBEL INTL&quot;</bucket>
              <bucket>&quot;AMARILLO INTL&quot;</bucket>
              <bucket>&quot;ABERDEEN REGIONAL AR&quot;</bucket>
              <bucket>&quot;ALLEGHENY COUNTY ARPT&quot;</bucket>
              <bucket>&quot;ALBERT J ELLIS&quot;</bucket>
              <bucket>&quot;ABILENE REGIONAL ARPT&quot;</bucket>
              <bucket>&quot;ASPEN-PITKIN CO/SARD&quot;</bucket>
              <bucket>&quot;AURORA MUNICIPAL ARPT&quot;</bucket>
              <bucket>&quot;ANOKA COUNTY-BLAINE&quot;</bucket>
              <bucket>&quot;AUGUSTA STATE&quot;</bucket>
              <bucket>&quot;ALEXANDRIA INTL&quot;</bucket>
              <bucket>&quot;ALLENTOWN QUEEN CITY MUNICIPAL&quot;</bucket>
              <bucket>&quot;ALBERT LEA MUNICIPAL ARPT&quot;</bucket>
              <bucket>&quot;ALLIANCE MUNICIPAL ARPT&quot;</bucket>
              <bucket>&quot;AMSTERDAM SCHIPHOL&quot;</bucket>
              <bucket>&quot;ANKENY REGIONAL&quot;</bucket>
              <bucket>&quot;ANN ARBOR MUNICIPAL&quot;</bucket>
              <bucket>&quot;ANNISTON METROPOLITAN ARPT&quot;</bucket>
              <bucket>&quot;AQUASCALIENTES&quot;</bucket>
              <bucket>&quot;ARCATA AIRPORT&quot;</bucket>
              <bucket>&quot;ARDMORE MUNICIPAL&quot;</bucket>
              <bucket>&quot;ARNOLD PALMER REGIONAL&quot;</bucket>
              <bucket>&quot;AUBURN-LEWISTON MUNICIPAL&quot;</bucket>
              <bucket>&quot;ADAMS COUNTY- LEGION FIELD&quot;</bucket>
              <bucket>&quot;ADDINGTON FIELD ARPT&quot;</bucket>
              <bucket>&quot;ADIRONDAK REGIONAL ARPT&quot;</bucket>
              <bucket>&quot;ALBERT WHITTED&quot;</bucket>
              <bucket>&quot;ALPENA COUNTY REG&quot;</bucket>
              <bucket>&quot;ALTOONA-BLAIR COUNTY&quot;</bucket>
              <bucket>&quot;ANDERSON REGIONAL&quot;</bucket>
              <bucket>&quot;ANDREWS AIR FORCE BASE&quot;</bucket>
              <bucket>&quot;ANIAK AIRPORT&quot;</bucket>
              <bucket>&quot;ANIMAS AIR PARK&quot;</bucket>
              <bucket>&quot;ARLINGTON MUNICIPAL ARPT (TX)&quot;</bucket>
              <bucket>&quot;ASHE COUNTY&quot;</bucket>
              <bucket>&quot;ASHTABULA COUNTY&quot;</bucket>
              <bucket>&quot;ATHENS/BEN EPPS ARPT&quot;</bucket>
              <bucket>&quot;AUBURN-OPELIKA RG PITTS&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[usr:Calculation_848928564440805376:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='10' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='11' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='12' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='13' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='14' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='15' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='16' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='17' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='18' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='19' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='20' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='21' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='22' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='23' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='24' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='25' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='26' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='27' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='28' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='29' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='30' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='31' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='32' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='33' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='34' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='35' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='36' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='37' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='38' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='39' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='40' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='41' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='42' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='43' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='44' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='45' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='46' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='47' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='48' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='49' />
              <groupfilter function='member' level='[usr:Calculation_848928564440805376:ok]' member='50' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[usr:Calculation_848928564440805376:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Airport: Name:nk] / [federated.0880cgg0sbww3217r6jhq1f4rrxv].[usr:Calculation_848928564440805376:ok])</rows>
        <cols>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]</cols>
      </table>
      <simple-id uuid='{7650C236-DFFF-400D-A7F6-E8467483ED59}' />
    </worksheet>
    <worksheet name='When Do '>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes data)' name='federated.0880cgg0sbww3217r6jhq1f4rrxv' />
          </datasources>
          <datasource-dependencies datasource='federated.0880cgg0sbww3217r6jhq1f4rrxv'>
            <column datatype='string' name='[Conditions: Precipitation]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Bird Strikes' datatype='integer' name='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' role='measure' type='quantitative' />
            <column datatype='string' name='[Conditions: Sky]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Bird Strikes' datatype='table' name='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Conditions: Precipitation]' derivation='None' name='[none:Conditions: Precipitation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Conditions: Sky]' derivation='None' name='[none:Conditions: Sky:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Conditions: Sky:nk]' value='71' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Conditions: Sky:nk] / [federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Conditions: Precipitation:nk])</rows>
        <cols>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]</cols>
      </table>
      <simple-id uuid='{2A258652-5756-4C72-8DFF-7822F6ED545A}' />
    </worksheet>
    <worksheet name='Yearly Cost'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes data)' name='federated.0880cgg0sbww3217r6jhq1f4rrxv' />
          </datasources>
          <datasource-dependencies datasource='federated.0880cgg0sbww3217r6jhq1f4rrxv'>
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[yr:FlightDate:ok]' value='66' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[sum:Cost: Total $:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[sum:Cost: Total $:qk]</rows>
        <cols>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[yr:FlightDate:ok]</cols>
      </table>
      <simple-id uuid='{DB80C25F-126D-4EF6-BC71-5CB7CA351F2A}' />
    </worksheet>
    <worksheet name='Yearly Strikes In USA'>
      <table>
        <view>
          <datasources>
            <datasource caption='Bird Strikes (Bird Strikes data)' name='federated.0880cgg0sbww3217r6jhq1f4rrxv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0880cgg0sbww3217r6jhq1f4rrxv'>
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='Bird Strikes' datatype='integer' name='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Bird Strikes' datatype='table' name='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Origin State:nk]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Origin State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Alberta&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;British Columbia&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;N/A&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Newfoundland and Labrador&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Ontario&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Prince Edward Island&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Puerto Rico&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Quebec&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Saskatchewan&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='&quot;Virgin Islands&quot;' />
                <groupfilter function='member' level='[none:Origin State:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Origin State:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Illinois&quot;</bucket>
              <bucket>&quot;Pennsylvania&quot;</bucket>
              <bucket>&quot;Missouri&quot;</bucket>
              <bucket>&quot;Kentucky&quot;</bucket>
              <bucket>&quot;Ohio&quot;</bucket>
              <bucket>&quot;Hawaii&quot;</bucket>
              <bucket>&quot;Michigan&quot;</bucket>
              <bucket>&quot;Colorado&quot;</bucket>
              <bucket>&quot;Tennessee&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Utah&quot;</bucket>
              <bucket>&quot;Maryland&quot;</bucket>
              <bucket>&quot;DC&quot;</bucket>
              <bucket>&quot;Louisiana&quot;</bucket>
              <bucket>&quot;Oregon&quot;</bucket>
              <bucket>&quot;Nebraska&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Minnesota&quot;</bucket>
              <bucket>&quot;Indiana&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;Virginia&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;Iowa&quot;</bucket>
              <bucket>&quot;Oklahoma&quot;</bucket>
              <bucket>&quot;Alaska&quot;</bucket>
              <bucket>&quot;Nevada&quot;</bucket>
              <bucket>&quot;South Carolina&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;Arkansas&quot;</bucket>
              <bucket>&quot;Mississippi&quot;</bucket>
              <bucket>&quot;Kansas&quot;</bucket>
              <bucket>&quot;New Mexico&quot;</bucket>
              <bucket>&quot;North Dakota&quot;</bucket>
              <bucket>&quot;West Virginia&quot;</bucket>
              <bucket>&quot;Idaho&quot;</bucket>
              <bucket>&quot;South Dakota&quot;</bucket>
              <bucket>&quot;Montana&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>&quot;Vermont&quot;</bucket>
              <bucket>&quot;Wyoming&quot;</bucket>
              <bucket>&quot;Delaware&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Origin State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' />
              <text column='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Origin State:nk]</rows>
        <cols>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[yr:FlightDate:ok]</cols>
      </table>
      <simple-id uuid='{87E1A2FA-A81D-4915-ADB8-EEFC82C741FA}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Bird Strikes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Aircraft: Make/Model:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Airport: Name:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Origin State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{28B53CAF-0980-4964-B2A8-4E199326EF65}' />
    </window>
    <window class='worksheet' name='Yearly Strikes In USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Origin State:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{22C56B3F-CB3F-4341-A3C7-8863C44E00C9}' />
    </window>
    <window class='worksheet' maximized='true' name='Top 10 US Airlines'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[io:Aircraft: Airline/Operator Set:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Aircraft: Airline/Operator:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Origin State:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[usr:Calculation_848928564440805376:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{259CB6AB-CE82-48C2-84BE-A7CD5C560A4E}' />
    </window>
    <window class='worksheet' name='Top 50 Airports'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[__tableau_internal_object_id__].[cnt:Bird Strikes_68519A9F08C14EC1BB4A9B7D4401B3B8:qk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Airport: Name:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[usr:Calculation_848928564440805376:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4BE35C4B-F9C7-4CB4-8CCE-4B93E338583B}' />
    </window>
    <window class='worksheet' name='Yearly Cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8CFB280F-7536-4BC9-87CD-3E1441C0DEFC}' />
    </window>
    <window class='worksheet' name='When Do '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Conditions: Precipitation:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Conditions: Sky:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:When: Phase of flight:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[qr:FlightDate:ok]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7464615-2314-4104-BC6A-30ECBF4849C3}' />
    </window>
    <window class='worksheet' name='Altitude'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Record ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3F93371B-67FC-42A6-ACA0-D0DD8E7341E6}' />
    </window>
    <window class='worksheet' name='Phase Of Flight'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Altitude bin:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Conditions: Sky:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:When: Phase of flight:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1B12514-CEFE-4B07-A8C5-420351D4E668}' />
    </window>
    <window class='worksheet' name='Avg Altitude'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Altitude bin:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:When: Phase of flight:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9FE4D7A4-65FC-4857-8A14-92EEB0C4AFB1}' />
    </window>
    <window class='worksheet' name='Impact On Flights'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Impact to flight:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Indicated Damage:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Wildlife: Number struck:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2888E8C7-B125-4F50-9E66-4546BF2AE404}' />
    </window>
    <window class='worksheet' name='Effect at different altitude'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Impact to flight:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Impact to flight:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Indicated Damage:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Feet above ground:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C0BCC34-E0DB-4A2B-BA73-19884896DC43}' />
    </window>
    <window class='worksheet' name='Pilots and Prior Warning'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Impact to flight:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Indicated Damage:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Pilot warned of birds or wildlife?:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{581A0490-4E4E-438D-850C-A333ED4CD648}' />
    </window>
    <window class='worksheet' name='Pilots and Prior Warning (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Impact to flight:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Effect: Indicated Damage:nk]</field>
            <field>[federated.0880cgg0sbww3217r6jhq1f4rrxv].[none:Pilot warned of birds or wildlife?:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71312C37-6B66-42D9-8A34-739A89A3D0A7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Altitude' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Altitude' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Bird Strikes' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2daWwcaXrff1XV991kN5v3KVI8Z0bSnJrDO5fGmpmNdwebgeOss1hsHBhe
      O0EQGPmQGFn4gxEkgOM4WAM21oA3u7HhjRHv4Tmk3R3taA7NjKSROJR4ifd9Nvu+qyofKFHD
      YbO7SZHdFFm/T+zi21VPV9X/PZ73eZ9XUFVVRUPjiCKW2gANjVKiCUDjSKMJQOPIEl5b1gSg
      cTRRkwF+dv5DTQAaR5OkfxaLr0UTgMbRxFTRTGr+BoLmBtU4qqiKsv8tgKIoaBrTOIgIolic
      LpAmAI2DijYG0DjSaALQONJoAtA40mgC0DjSaALQONJoAtA40uhKbUAp+NWvfkU8HkdRFDwe
      D4899lipTdIoEUdSANFolLq6OjKZDIFAoNTmaJSQI9kFeuihh5ifn6eyspKurq5Sm6NRQo6k
      AD755BOqqqrw+/1cvXq11OZolJAjKYCGhgba29uJRqOlNkWjxBxJAZhMJiYnJ5mZmaGpqanU
      5miUkCMpgGvXrvHpp5/y5S9/mZGRkVKbo1FC9n09gKIoAIjiwdGa3+9naWmJ5uZmFhcXqaur
      K7VJGiXiSLpBy8rKKCsrQ1VVFhYW8Hq9mEymUpulUQKOpADeeustotEoL730EtFoVHv5jzBH
      UgCqqvLKK69w7ty5jS6axtFkx2MAVckwMzWN21dDJrbG8lqE2vpGomsL6K3lOMwS0zMLVNfV
      ohOFAzkGiMfjGAyGjZlgn89XapM0SsSOBRAJrpJGz+TEJCIZahuaMakJJlaTpCMBzAYBt9fL
      ciBFZ2v9gRPA9FKQv3/n5qZj//rVk7hsWjfoKLLjLpDFZmd4YJCahmaIB5ifGkFWTVQ2NBFN
      xwgD5R4PqysTKIqCLMsAB6ar4Q/FeO+zqU3HfvO5TmymI9kbPPLs+KlPDd1gJQamSBglGiaR
      TOOrrmZ8+CaSwUyVU8+1T6/j8tVvqvUPSgsgidKWYzpJh06nCeAosuOn3th5ksaNT1Ubf9XW
      3P27Rptc1bhPOBjVsoZGidAEoHGk0QSgcaTRBKBxpNEEoHGk0Xx/ReLOfKOqqgiCgCAIJbZI
      AzQBFI13332XqqoqLl++jNFo5Gtf+5omggOA1gUqEoqi8Itf/ILXXnsNo9FYanM0bqO1AEXi
      gQce4IknnuDixYt0dXVptf8BQWsBisTVq1e5evUqXV1d9Pb2ansmHBA0ARSJhoYG5ufn8Xq9
      2hLMA4QmgCJhMpkwmUxcuHCBdDpdanM0bqMJoEiMjIzw6KOP8vzzzzM7O1tqczRuowmgSDz7
      7LOMjo7y7rvv8swzz5TaHI3baF6gIiFJEqdPnwZgdHQUnU5HeXl5ia3S0FqAIvHBBx/wox/9
      iFu3bjE6Oorb7S61SRpoAigaoijywgsvMDk5ydTUVP4vaBQFrQtUJB599FFUVeW5554jHA5r
      E2EHBE0ARSCdkfnj71/cdOz1ZzvpadbSsZSaHQsgFlplZGIWp6cKkxJlwR+ls+s4owP96B0e
      qhwGhidmaTh2HLeWagQARVH5bHRx07EzjzSXyBqNz7NjARitTjqOmxkcGSeKjrbGcm5e78fT
      0EhscYaxCPR0tzM0MoPrePPGlP9BSYuSLQRBUZV9tU/Jck1VVQ/MPTnK7FgA6XiY4Yl52tvb
      GB0eRxRFVEVBFAREQQABBFFAQEVV1QMX86KSxR41uzD27JpZBbC/19QojB0LYG15iYycYW7B
      j8Mi0j+yQMeDHYwMDqC3ldHgNNDbe5PapuMHMi+QKGy1QxRFJGlrvqC9QpK3vuiiKOzrNTUK
      Y3sBqAqJZJpQKIjH612v3YGqpuOfywbko+b2X90PPLRx9ER55b4Yq6Gx12xbLUdn+/ikt5+3
      fvJjxlcTxbRJQ6NobCsAs6ee6VtDPP70r1Fm1bylGoeTbQWQjoeIxoKk02kiCbmYNmloFI1t
      BSCIOsgkee/DKxh0B2MAq6Gx12zbt1FUidMv/gap5VE0d7XGYSVr1S6nk4zPLvHJ+b/n5lwC
      u0lz12kcTrZtAQRB5NFfe3n976KZo6FRXLIKQEnHWV2aY3h8FkEQ8NS3YTVqrYDG4SOrAPQW
      F6d62liIGXn+9IPYrPpi26WhURS29wLprZiUMB9eukRIc4NqHFK2FcDSeB8VbQ/TVG4hENfS
      eGgcTrYVwEogytz4ACHJTX2ZFtevcTjJKoBMbBW8XRxzC3x2/RqBeKbYdmloFIWsg2BVkZm8
      dYNoWuDs4+0E42k82kBY4xCS3Qtk8/Klp55AZ3EiyClMFnOx7dLQKApZBSCnEoyOjpJSQFBV
      Oh96BIdZiwjVOHxkHQMIooRVXiGAE10yyEpU8wJpHE6yCkDUGWg98RSRyT4mVhJ47IZi26Wh
      URS2dYNmYiEUo4unnnock7Q5GigSCaOqKpGgn+npGZJpmYB/mUg8iapkWFhYRFa0Bd8aB5/t
      Z4INVrx2if6BAWKpu/HQ8bCfS5c/RVFhYnIKi9VCJrLK9FKIkaEhRocHkeUkw2MzRfkBGhr3
      QtaRbToW4PKn15ienkEFOk89ufE/s72MGt96VuMyl4Op8Vvo9A589Q3E5qcIqQLN1dVEBidQ
      FAVZXg+jOCg5cGRla1hHRs6QyezfXEdG3npuWVb29ZoahZFVAJJOhyqaqayswu1wYNDf7QKF
      /UssLa+gt8zisZox25yUOctYW5xCNFmptuq4NTSC01t5INOiSOLWqFadpEOn2z8vl5xF+5Ik
      7us1NQoj6xNIBJfB7CAdWMFjMbKwlqTMvD4RZi+r4Eu/VrFR1u1dT5JSUXn3mKeiCg2N+4Gs
      1bLB7iG+NIGqitycDuNzaPvaahxOsrYAgihx4tQpTK4qbAZtPZjG4SV7LFAmzhv/9/tQdZJq
      u8jDTz6L26L1VzUOH1nfap2lnN/8xr9heHwW0ejAZdaWQ2ocTrZ1zciRBabWVMJTfUz6tdSI
      GoeTbQVgdFaRWB5lNqhQpoVCaxxStk+LYrDzG1/9KoIiQxbfuYbGYWBbAdx87ydMCM3YIhM0
      PHaWZo+2JuCgIssyFy5cwGazsba2xgsvvIBer7XahbBtF8jurcPrMNLQ/SgN2prgA83q6iom
      k4n+/n6qqqpYWFgotUn3DdsKwOdxcfPGDT69/BH+qBazcpApLy8nHA7T0tLC9PQ0Pp+2+2Sh
      bB+gIwhEQpGNYDaNg0s6nSYajZJIJEgmk6TT2gKmQtlWAJLVyyMnOqitrcWg02aDDzKJRAK9
      Xk9XVxcWi4VYLFZqk+4btheA3kR1dTVGOUZQS4tyoHG5XDQ2NvL222/j8/nwer2lNum+Yfsd
      YmIBPvroI4Zm/NhNWhjEQcbv9zM9Pc3rr7/OysoKi4uL+b90RBgdHeXcuXN8+umnWdekbCsA
      g9mCQZLQG0zotS7QgcZqtZLJZLh06RLxeBy73V5qkw4E6XSaa9eucebMGXQ6HQMDA1vKbFu1
      x1cmcTadpCI5xlIohU2bBziwGI1GvvKVrwAQCAQYGRmhp6cHQTjaFZdOp8PhcHD+/HlSqRTP
      P//8ljLZWwBVRihro9rgJ2Ko0HKD3kckk0kqK7V9mgFUVaWiooJ0Oo0sy8Tj8S1lsgogGZjn
      xtgcHQ88QqM9xcTq1i9qHByi0Sjf+973eOONN/jxj39MOBw+8rU/rK9DHxoaQhRFPB4Pq6ur
      W8pk7QIZnBWsvvtj/v7mFTIYee21U5v+n0wmMRgMKJk08ZSMzWomHosg6k0YdCKRSBSrzbax
      u7zG/mKxWHj66adpa2tjcXFRW2t8G51Ox1NPPcXbb79NRUUFra2tW8tk+6IgGjj7ldeznjQe
      9nPxk15eePbXGOy/iSCqOMoqWVrxoyoq5TaJlCqC3kFbU/Xe/iKNrMythFHN5QxNrwI6rKKW
      yAzWY6TeeecdRFFkdHSUmpoaqqo2r1ffcVVhtpdRV+UFMkgGB82NZXx2fYT6jq71tCgZge72
      Fm5paVE2nX+LHXuYFuV/n+vlo/7Zjc8nWyv5T7/91J6cG2B8fJxIJEJ3dzcLCwtbXqKDiqIo
      qKqKIAj09PQQDAa3zJHsWACJaIiVlVXKViPIqRBjoyF8dTXMTk2gyjJuq8TY6BiYbFpalNvs
      d1oUUdzc1RQEYc/OraoqN2/epLGxkeHhYaanp6mrq9uTcxeDr3/966iqiiRlD+nf8V0SdXq6
      u3vQ6Y14OjuJJTM4bFbK3XZEvRmjTiAUjmJ3aL7ow0JTUxNdXV1cuXIFo/H+yRDyt7/o45dX
      xzc+11c4+C/f/NKmMjsWgMFopsx4d07AoV+/IRbr3Rfe6XTs9LQaB5i2tjbi8TgdHR309vaW
      2pyCicRTrATvxkXZLVvHRpq74IAyODjIZ599htFo5Pnnn8dms5XMln/8x3+koqICSZJYWVkp
      mR37gSaAA4iiKAwODvLcc89x7do1Ll26xIsvvlgSWwRB4OzZsyiKgqIohy7UWhPAAUQURZqb
      m/n44495/PHHS/rSqarKO++8Qzwex+PxYDAYqK7ef/d2IpFgenoaSZJwOBx4PJ59uc7BcM0c
      AFRVJZFIEI1G6evrK2nmZlVVGR4eJhaLYTabswZxFRNRFMlkMgSDwaKtNb5w4QJLS0v09/fz
      /vvv79t1tBbgNqqq8pd/+ZdUVVUxPj5OeXl5UWq67bBarTzzzDO8/fbbJZ3ZFQSBr371q8D6
      xFKx3Nler5fR0VEEQcDpdO7bdTQB3EYURb797W9z+fJl9Hp9SV9+gKqqKoxGIy+//DKpVKpk
      dlwfWeC7/3h507H/8fsvYTPv72xzMpmkpaWFkydP7mtckyaA26iqSn9/P+l0GkmSmJiYoLGx
      sWS2DA4OMj8/j91u59SpU/m/tE+k0jJLa9FNx5QibH8VCoV48MEHeeutt6ivr6enp2dfrqMJ
      4DaqqnLr1i10Oh1dXV3MzMyUTAAADQ0NPPHEEwSDQQKBAGbz0VqP0draSmVlJWfOnNnXxAza
      IPg2oijy3HPPATA0NMTjjz9eMltkRaXrgZOEY0lEvQmbswxVPVqbDi4sLHD16lXefPNNzp8/
      v2/X0VqA2yiKwpUrV8hkMng8Hq5cuVIyEXx4Y5o//dFHm479wx//c/S6o5Oi0mg0cv36dWpq
      avZV/JoAbnNnoDU4OEg6nS5avzuRSPDhhx8CcPr0aUwmbfUdwMMPP8yxY8dIp9OUl5fv23U0
      AdxGEARefPHFos+4vvnmm7z88suoqsqbb77Ja6+9VtTrH0TCsST/7e8+3HTst888QFvd3gtB
      E8BtLvZO8rc/79v4LEki3/33L+/7ddva2njnnXcAaG9v3/fr3Q+kZYXPRjendgnHkvtyLU0A
      t4kl0sz7IxufdVJx/ANtbW00NzcDcOXKlaJcU+MumgB2STKZ5Je//CXd3d0b8Sq7ycfz5ptv
      YjAYMJvNTE1N8cwzz+yDtaUnHo/zi1/8Aq/Xi9/v5+zZswdi4b4mgF0yPz9PTU0NN2/exGg0
      0tnZuSsBnDlzZiPuqK2tba/N3DfuxE6ZTKaCXuTR0VHa29u5dOkSNTU1xONxLBZLESzNjSaA
      XVJbW4uiKLzwwgucO3cOq9W6q/N88MEHWCwWQqEQqqpSU1Ozx5buD5lMhr/+67/m2LFjdHV1
      UVtbm1MIjY2NRCIRXnvtNSYnJw+Mt+u+EoCqqgwMDDA9PU17ezv19fUla0ZDoRDvvfce6XQa
      vV6/aztSqRRTU1N8/etf5+c///keW7m/HD9+nGeffZabN2+i0+lyLpaPRCKcP3+edDqNIAi0
      tbUdiHXi9ySAWwN9xGWR5qZGxm4No7O4qHbpGZtdprrhGJVle7sueGxsjFAoxJkzZzZWKZUq
      RCAWi3HixAkCgQA6nW7XAWuvvPLKxt+vvvrqXpkHrL90qVSK69evY7FYeOyxx/aswtDpdDQ2
      NvLTn/4Un89Hd3d3zvLhcJgnnniChYUFkskksizvKrT64sWLhEIhXnjhBfr6+njkkUd2+xOA
      exRAIhFHlcxE1lbw1rcSW5xhZjXJQw92Mzw8SYXLupGaYi/Song8Hnp7e3nrrbfQ6/VIkrTj
      uP1saVFkRc5in5rz3D6fD7fbTSaTYXl5Gbvdvm35TJZYFkVWGJ/389//7tKm4//xt05nvVey
      LCOQfUZU/UJwmqqu2z4wMIAkSej1ehYXF0kmkzsOrc4WhyPLMqlUimvXrtHV1cXc3BwfffQR
      jz322LbnaWhoIJ1O43a7iUQi6HS6be9XtmsqynoaGb/fzzPPPMO5c+cQBCHnM9p6X9hS/h4E
      oNLW+RCZ2BKDt1bwNDhIyzKCCJlMGgUBQRA2mrk7NY+qqoyNjdHS0rLjK2YyGR555BE+/vjj
      DQHstBmVspQXRTHLeYRtU2kALC0t8Rd/8Rc0NjYSi8X41re+tW3GBCmL9kVRRFZgdiW86bis
      gJDNRklC2sY1+8VaXRDWbT9x4gS//OUvmZmZobW1dVcZHbLdX0kSMRgMVFRUMDo6ysMPP5wz
      9QjA7Owsf/M3f4PP50Ov1/ONb3xj2/LZUteIoogkSTz55JNYLBa6urpIJpM5rylsSRfDlvL3
      1AIsz0+xFk3TfaKb6dFhLGVeKhx6hobGaGhpQxCEjTiOf/qnf9r4HIlEOHbs2I6vFw6HGR8f
      x+VyEQgESKVSu+gCbe0CCFmOwdYX6/P4fD7+4A/+gHfeeYdTp07lHNRlPYuQ/biw3fFc9mQ5
      LAgCc3NzJBIJ0uk0i4uLKIqS84XJeuqs11w/trq6iqIoXLhwIW/3qqGhgd/93d/l3LlzPPnk
      k7lbou1+piBw/fr1jQornU7T1dW1g1+z9ffcgwAEahuPUXv707H2zo3/9PS4t5R+4IEHKCsr
      w2q1cuPGjV1dsaGhgVAoxPDwMMePHy+qJ+GOkO/cwFRaxmp38uo/+wqqqpJKyxj0BytYzefz
      YTKZKC8v5/HHH9/TQaeiKFitVvR6PQ8++CD9/f05K7VkOoPDVcbXXv9NANIZeVfBfYlEgrW1
      Nb72ta/xwQcf7Nr+OxTNC7SwsMDAwACZTIbjx4/v6hzT09PcuHGDlZUVQqEQra2t+y4CRVHo
      7e1lZmYGWZZ58skn8Xq9/MkP3+ParbvbkT7VU8cf/osn99WWnWIwGGhra2N2dpZQKLSnHjNJ
      kjh9+jQOh4NIJJJ3MPqfv3eB4em72ZnPPNLCt7+68wFsa2sroVCI999/P2uy251SNAFMTk7y
      la98hXA4zOXLl3dlvKqqnDhxglQqVbRtgFRVZWhoCLvdjsvlYm1t7b7Zg+vGjRssLS0xNDSE
      x+Ohra1tzxa1X7+1wEf9MxufzUYd3/j1h/bk3LkYHh7GarXS0NBAf38/TU1N93S+ogngS1/6
      Em+88QapVIovf/nLuzpHQ0PDHluVH0mSOHv2LB988AGiKN5Xs7V2ux2Hw0FjYyOTk5N72gUa
      m1vjrY9HNj47LMaiCOD48ePU1dXl9QAVStEEcPHiRRKJBF6vl/fee4+XXnppx+f40x9dYmxu
      bePz6e46fuuF/Vkreod0Os13v/tdOjs7+dWvfkVHRwdlZWX7es294vNLOnfjdSsGf/uLPlLp
      u27PRzqqqSrPPn8UiadI692MLdwOWjR773nsVTQBeDweGhsbcTqdu84vueiPMr0U2vjsD+3/
      zjV6vZ7f+Z3f4aOPPuLUqVP3zcsP8B++e56Z5bv365UnWvlXLz1YQou28rMPh4kl7ib+ctvN
      2wpgbG6NP/rrC5uO/dUfvorPvfu0kUXtAmX7ey9RVRVVVfe0qVdVlb6+Po4dO0ZFRQWzs7P3
      TbxOKp0hkbrbTchky9N+xCmKAHpHFvmzf/h407H/9e/O4rDuTart4eFhLl++TCaTwWg08vrr
      r++ZCNLpNMlkkqWlJWRZJhqN3jcC2CmqqpJKpVBVFaPReCDClQshk8nwve99j5aWFk6fPo3F
      YinY9qIIIC3LBCKJTcf2cqFzKBTC5/MxNzeHKIp7em6DwUBTUxPHjx/n3XffLWmqlP3m4sWL
      pNPpjVSIZ86cKbVJBdPU1MQzzzzDpUuXaGlpKXgTj/sqGnQ7Tp48ycLCAidPnmR6enpPa66Z
      pRAx0cm1Wws4qo8TFw7FLcvKHc9K9tCQg8udEAmj0cjTTz/NwsJC/i/d5lA8zcnJSa5evYrZ
      bGZ4eJjOzs49e4BvfzLCzz4c3vjcWOnif/7bX9+Tc5eKP/nhe5sCxV5+opUTrVU89NBDXLp0
      CUVRSpqNbjdcuHBho+USBKHgbuqhEEBlZSXt7e10d3fj8/num77rvSDL8o7jeu5weWAO5XPd
      xEc61l+WCxcu8NJLLyFJEj/72c/umwwVgiBQX19PZ+d6OM5nn31W8HdLKoDLg3Nc7J3Y+Gwy
      6Hc1PX5nyj+VSpU0rfl+oygKP/zhD0mlUhvx/Xvp3+/p6eGdd95BEAQ6Ojru+XxfjJ/aL1RV
      pbOzcyMMvNDQe1VVSyuAmeUgF3unNj7bzYZdCWB0dHRjgDowMHDfNd+FcsfFq6oqXq+XWCyW
      /0s7oLKyEpfLBaxnqNiNCBRFIRgMoqoqCwsL6HS6osyef//736e+vh5ZlvNWgsFgkDfffBNJ
      kg5HF+jYsWO43W68Xi9dXV277hrsBRcvXmRtbY3W1lY6Ojr2tPYTRZGnn36aYDBIX1/fRi7T
      veLixYuoqorT6WR+fn5X55BlmR/84Ac8/PDDLC4u7knAWj7u7GHgdDoRBCFvnNja2ho9PT1M
      TEwcDgGcvzxGOiPDsB+ATtVES01pZmzT6TRnzpxhfn6eCxcu7OmknyzL9Pf3k0qleO6557h8
      +fKe5i998cUXSSQSWK3WXUfs6vV6vvnNb2I2m5mbm9vXtIZ3mJgP0De2Aqxv4CeKIrm2d6ir
      qyMWi9Hc3Lz3AogFVxiemKWh5ThuW3Hi9X9w/jMi8btrcr959qGSCeDhhx+mt7eXU6dO7fnO
      JpIkbYSSvP/++5w9e3bPzh2MJviHX/VvOvbKEzufqIzFYvz5n/85nZ2dDA4O8nu/93t7ZeK2
      9E8u8703rm181utEXnli+5ZneXmZH/zgB1RUVOy9AKZnl+juOs7wyCzu9t0N0FRVJRgMYjKZ
      CAQC95Vnp6+vD5/Px89//nN0Ot3tFmBvXLKJVIaOnhN09JwAQN5u6dQuiMbT/PSD4U3Hnuja
      +Y7wZrOZb33rW3zyySc8+uij+7q90W7x+Xy8/vrrvP/++/vQBbq9Dni7BdyFkEgk+MlPfkIg
      EKC5uZnu7u57jvsuFm1tbYRCIbq7uzl//vztZaB7c+7/d3GAH124W0v73Fb+6g93F1q+XwiC
      QGVlJa+++irJ5P7k87xXBEGgoaGBmpqavRdAlddFb+9Napt2P/IXRZGWlhbcbvfG5/sFh6sM
      u3Pd7n/5298AQWTPFHAf8Fc/vcq7vZMbn9vrPfzRNw5Wusf/+n/ep29sCdiHeQCHp4oTnu0T
      JBWC0WjkqaeeuqdzJFIZ3rh0a9Ox092125TeO37/z95kOXDXPfmbz3Xx2jP37lO/X0ikMpvG
      Y7HkwdtYO5ZMb9goqPu4/YaiKMiyTDqjEPpCemu33UQqrRBN3L1ZgiBQZjdlrfEVRSEYTW3K
      sWMy6LCa9PjDiU0BcFaTAYNOZO0LAXgOixEECEU32+KymcjIyqYHB1DuMBNLZoh/7iFKkojL
      aiQUS617nm5j1OuwmfWsRRKbNpGzmPSY9BL+8GZb7BYjogDBL9jitBpR1K3pwMvsZhKpzKYX
      ShRF3DYj4XiaVPqu79ugk7BbDAQiSeTPTQqZjXosRh2rX1hHYTMb0EkCgchWW1SVHT27aCK9
      KQRbL0k4rAaC0eSmcOxtn53ZgEHao2eXyBBP3b1fOknE+YVnt68CgPUXVxCELYNYRVG2fdH3
      6/h2M5OlsHG7tQtH3ZZcNsLeP7t9F0B+FG5eu0pKEalqbqfSnTvJbCK4TO/gFAaTke6eLvRi
      bk/I3OQoi/4QJquT9rbmPH4Thf7PelEQKKtpoXqblUkAidAKyzGRusoyFibHsfhqcZhyLzhf
      mJ5gbmUNk8VOx/FjOWxRCAZCRMMhUrKC0+3F7cx9X+LBZQKJDNOT83Q80IM9jy3Lc1NMLaxi
      Mtvo6GjN46dSmBgZBYOZ2toadHnuuZyKcu2TPmo7GjGZynBZc+8pvDg7TVqWWQ0n6ek6nscW
      lYmRAfzBFE5PBS0NufZzTuNfjRAJB1EAb2UN1i/clwMwukwSi2UwmvWsLAXzlg4sLiEZDajp
      DMkC9qv1h6JIgkgiFs1bFjIkMzrqarwE/aGcJSWdnoXZaQKBNeaWV9AVMFBfCUTQiQKpeCyP
      j0zYCEkWRZFCPMByOs3w4C08HieJVP5tRVf9IURRIJOIkT9yRsBbUU4ksELv9U+ZWQjkLJ2I
      hIhGE6z4V4jG8+dMTcbCTC2HMCEXYMt6d0cUBKKhfO+LDptZQme209DQgMW4dcgrfec73/lO
      3mvuJyqYbS70yNjcbmzm3JMvVpcLSVBJZFSqfR7EHG9HIp7AZDIgCAoGmxu305aj1lUJroUQ
      SDO3EqapqQ6DfnsfgaQ34XXbmJ1fpKm1Hasxd42bjEdBEDHqRSSzkzKXPWdrJEk6LFYrFqsV
      k8mQ0xMmpxMkMmA2mRAEHZ5yV15BqnIKFYEyXzUOS54JS1Vmdm6FY60tmC1W3E5bznATg8mG
      QJJ4SqKh1pc1HeUm+xWBlmNNiIDZas1bK6czUOGxIwt63C5HjpICqirTd72XcCSG2e7E+IVn
      WuIWQEVRRfwLE0wthXDa8qc5XB4fJSSLeMu3Zp/7IoIAFosFu7OMivL8EzKKHGNmLoDPbWJy
      ejlnWTkdp+/mIJJOYqC/n1Se9baKojA+No7eZGVtaTFvC6DTqVy/8gEfvf8Jg2NzOUuLOiMO
      pxODDiSjGUMB2zu5ysqIR4PcGhohd3ux/owMYpJPPrmGZLBgMOQWe2R1nlBah5nufIMAAAtd
      SURBVK/cldcDrMhJrn38MX19fUzOLeW1O7y2xPVrvUzPLZKR8/cABFGiobEBo15cd0l/gRIL
      QGFqbJSELGAy6IgV0FyaHWaW5xZZXV0j3+83mkxMjAyztLTEyNhU7sIIuD3VuOwSa8Eodkfu
      PncssILZUUF5WTkunUAgj+1mq52mOh8rfj8Gi7WAOVwRt7cGm01Enye4TxAEIotThFUraniR
      pVAiZ3mA5flZ9BYnNbVVeV+ChZkJVoJRTEYDoVA4T2kwmI2E1vysrq6SzlMxiJKR5tZWunp6
      8DqteadP7W4fj5zsQq83UlWZP0GZKBmorq3FV2ZiaXVrN7jEApBoPNaM3WZHUhJEE/l9xjqD
      GZNBRzyZyGv82tIcM4uryLJMLFrIGAAEFBLxDGKeWtTs8uIwC0QiEYyuclzm3AO9UCCAyebA
      ajbjKXMVZIsE2Nxeyt3591mwuMpJrM2zlgSnJbctAEazGSWTLiBdukB1fR060cxDD3YQWsvd
      /1fkJJG4QG2VF4vFgpRnwKzISSbHx7nZ10dUXv/NuVGYX1zjWEsDoyOj+UvLKeZmZ1mLCdT6
      tnaXDsAgWGF2YgJHeRnxAlqAaCCIy+fDhEIqT/vq8lbxUHc7oihSVV3I5FyKVAp0epHAau4B
      lk5voraujtraWurqa/N2O+xOJyDR2NhIdQE1F0A8FkVR1E2rt7Zj3b0noROlgspLooiiqCQK
      ClfQ4bBJ9A/eoqKqMmdJQTTgclqIhELEE4m8rbQoGensbiOWUDCQKWAQLOIpszI0PEJldf5l
      j2omxeLiEoHVJULRre/XARCADqfbjn85gMOZf9M0Z1UdNjGDr64BY57aRRAEFpbXONbaSl11
      RQG26Gk81kZ9XR2tLXub+kQQBNYWJrh87QaTM4Us2hbxVVXiX5ojHM3fpUlGguhsZdTX12HU
      5X+s8/PLtHZ0kAyuFfDSqRiMZiwmI6Fw7i6QIAhE1pYJByLorQbWgvmTl6VSaSKBFZZWcrcu
      d2xRRCNmvUi0gFZdUWRESY/RqCeT2TraOQACSBKLpDCaCnODzg8PM7XiZ3V6mlABiZ4yiSgj
      t24xXcAAC2Do5mck5Ny7w+wWV3kFelEmleVBbEUhGIzQfeJRGms8OUuqqoLe7kZMhpifX8w7
      IAc4dvwY48ND+BqaCuh2CDhcZXi8ZUSCuQWgqiq2Mh9dJ3tQYhkqyvJvHlhRU8djpx6kvqmp
      oBdydWGaBEaS0fzjEUlvpLraSyKhYMsyH3EABGDmgUdOUuYqo7XFl7e0w1vJA53tSHoJYwEO
      crPZhKwoBa4TFaivr2V11X8PsazbM7ewygMPPkgiuFrA+VVCwUVufNrLyGTuFU6KnCaVVrHZ
      7dhsFqQ89yW0usjg8BjpTIa1VX8BLYDM7PQc8UQajyf3OgtFjnLujXPcGBgmnclsChfZjslb
      I4zPzLM6P0v+akfAU1GOyWDC5c4/lkonoowODmMrc7C8Etny/xKvCFOYm54hmZHXa7FYAmMO
      70syGgGTgbmJKXQ2B4Y8XSCAispqQtFYHlffHTLMLfipq3UxM+enveXegvq+SGtrE8MDA1TW
      NxZU8xhMTsToCulk7rGRIAis+Vdvv8gi+eYHHeU+esrzVzZ3CK4uMHRrjPp6H2Zn7q6kJFl5
      4ddfZGlpgdnZeVKZ/PKqrqtmKZzGbtIV8EIqBEIh5HSaoATVVbl/h9HmpuvECVLxGG7vVsGU
      vAUwGHTE4xGmpuYQsvhpP4/RakNIRLFX1NDUVI+ugBbAWeahtraOcGA1b1mQMOhheTWErYA5
      iZ0QCfqZX/JjMptJJZN5WgCVqdEx4rEEFnc5Hk/+mk7a4czxTnCWV3PigTbMFitOe+4ujaKm
      uPFZL/OLK5RV1uEwF7AfgSAiKSnGxqcKaI0k6mvqSGbiNBSwRiQRWmF2fJS5pSUmZ9e2/L/k
      LcD83AKSUY/e6MBVwEunN5vou34Vt6uM1o62vK1AaG2FYCSOrzpfKLTCwuwcNtf6BJutAFfi
      Tgishqht9rEwFaO2KnefHgTqW9ogdhNXTxe55joBBFFPVe3d37f36ycUVvxh2tpbkXS5X2gB
      EY+3EvX2c8nICro8HrKNYLyCllHJjI/PUFVVgZplx88vYrS50ZkC1Fd5UA1b72SJBaCj58RJ
      VEVhdWkefyhKec6gLxXJaKHWV8ZaJH9vMbS2wlpo3VOQfwwg4KuuZW1lgZVgHIt5b9czx0Jr
      jI9HmRuPIOgUaqorcoZlTI+NMOdfZfXmTap8tVR6tp/JVuQEQwN3ZnRFWo4fx2LYy0crohMy
      DA8PU+6rpca3/ThAEPXUNe5sIxO9wYAiZ/D4fAV0SQQymSTBUBhBn2+AnSawFsFkNLDiD1NR
      deAEsI4gingq87sdo4FFPvzkJrW1lXiqavPW/g63h0gowFokSUqRyN1dFBCEJBNTq3Qd9zE0
      MktP+87XxG5Hc1cXqXSGWt/69HxuBOqaW6lrLiyliKQz09mznxuFqKhCElH0EA2HIYcAdsPU
      6BjlDS2YdFIBM+QCtXW1BEIxxLxjQJmBGzdxlLsAgbIslWDJxwA7wery8aUvPYnFoGN1YZZU
      IdGggQhNzc3Ew/ldrGDAYRW4NT5PdfXepvPQ6Q1YLBYsFgtmk3EPl7MXB1EQmJ4YRxb2NudS
      NLBCKJ5gcmyMyanZgqJBl1ZCNDY14S3LF99lpKPzGAaDYX1f6SxdwwOwHmD/SCYTCCjMzC5g
      d5fjdee6YTJjY9M0NTeipsJMLsRpqi9k8uywoxIIBHE6XSiZJIFwnPICQzkKZWxwgKpj7UwP
      DdLU1UHuUYbC2NAQSQWc5T6qK3K1RgpL83MEQlEESU91bd1BXA+wf0zcugV6M81NTSxMT+WN
      wAysLBKJJ1manyOj3m919D6SiXP9+qf03hjEYM4/W79Tysqd3BrsR9Yb8/bJA4EgVrsdk8lU
      wD7DaSbGpkmm06SSiU3LQ+9wIMYA+0VVpYcbvb1IIlhduQadACInTp1kbGwMs9PLsZw1y9Ei
      Go2RjsXRORyEw1HseQL/dko8FiMYDGExr8cC5XqtV+amiWUEBAF05nxBgkYeffKJnCUOdRdI
      4/5gfGiAtVicZFzm4dOP5OwCBf3LLK34EUQdbo+PctfuN8iDQ94CAMzPTLAWjGK0uWhuqLnv
      Bp9HgeqGRirlNP5IKu8LabJY0etCJFIp4okkoAlgW9KpJPOLq7S1tyNJh/qn3tdMjYwQUUCn
      qFT4PDlbgJH+z0gI62tC9oJD3QUKr62w5A8iCAIGs52aKq/WAhxAYiE/y+E0VqNEucdT1Gd0
      qL1AdrcHRZZR0nGWl3Ov8dUoHSvLqySjASam5goMWtw7DrUAAAyigqyz4bLvbXCbxt5hMuqI
      ZUS8bnvRX8hDLYBgIIDN6cIgKhgt+dfVapQGRVYIr62yGsi/wGWvOdQCcLpcyIpIU1MTUgGT
      7BqlIZ5IYbUYSCVSRe8CHWrXSDIW4uqVK9TW1yHoLVT4tNCGg0YmlcTtq8KlKCgUf9O6Qy2A
      VFrlxIkekmkFg/ne/MUa+0NweZar/WPYnS5qaupw4yyqF+hQu0EVRSEUCuFwOAABQRQ0N+hB
      Q1VRFJnxWwNMr8R5+qlHC1ikv3cc6hZAFEWWpkeY0bvwlJfh82rxPQeNlZlRPu67RWV1LQ11
      xZ+pP9wtQCbFwtIqmWQUna2cKq9bawEOGIqc2djcQxBEDEZDUZ/RoW4Bbg30ozNKBDM2xOA0
      Vd78CXU1ioso6TCVMEzlUAtAVRRiKZnw6hL6PBtGaBxNDncX6HMJsQRBQJQKWXOqcZQ41ALQ
      0MjHoZ4J1tDIhyYAjSONJgCNI40mAI0jjSYAjSONJgCNI40mAI0jjSYAjSPN/weQ7zxwGf5J
      jgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Effect at different altitude' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Impact On Flights' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Phase Of Flight' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pilots and Prior Warning' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAaNElEQVR4nO3d+XPbd37f8ef3+8V9EBdBHCRIkdRBUZIty7LjzTrZ2c52kkyatpntJJP9
      Ib/0t3Qmf4P/i2bSmW5n2kwz7XS6WW8m3u3Wcderta2DOklKvESCB3jgvoHv1R8o0ZZIeiUB
      JAHi85ixJYDA9/vmR3jhe73xgWSapokg9Cj5pAsQhJN0ZAGoVCpHtWhBaJsjC4Cqqke16Bds
      ra8wt/AUVVPJZHJks1navVOXzWb33ZfeXCNXqlEpZGloz+5Lp194jFavUKw2Xnt96XSaYj6H
      ZpiAQTabJ5fNUspnqWsGW+sraNruSpu1EovLqxjf+J2XlpYwAdM0WV58wuzsPKqhk3z6lFq9
      ynJynd82RIbaIJsv7bs/m82Sy6bRjFf7XUxDI5cvAiZry4ssrfz2dR8n5aOPPvroKBZcr9dx
      OBxHsegXfPzTjxkbcHJjJkUhvcOD+/c4OzrI1L1p3A74j3/7X0iMXkBuFqkYCuvJZbR6nXq9
      zL2HswRCATZWkxTyOdbWU+wUqnisGlMPnjAQGWBh+j4/+eRTfuf6NWrFDHcfPsHtsPA3f/O3
      nL/yLiu3f8HstkZfn5dH9+5it1nJpnfQdZUv/s/HrKt+qpuLqIqbPreD1Mo8ye0SNr3KxmYa
      i9vDzmYKo1GkqMrkMxlmZ2ZIzk8TGhpj9v4XfPabGTaTcyhmg2KtwX/7u//BhdE4C6s7WGVY
      fnSLmjtO2OvANJtMTU0zPnYGTJOf/eM/cfWdd9hZuc/f/+Q37Dy9SbLqJWitsbpdIuBWuDP1
      kK2FO/zTzUXCXjuG1YlZ2uCT38zgsWosLq7QPxDm8YO7/OyXv8ZBnUBkiOm7t7G53Dy6fw/Z
      5uS//uf/hCsYRSvvsLJdIuS1cfPG59ycSfLWxTN8/NOfMxiyMDWfQamnWd4sYKfB3MIixVKJ
      9e0cDqnO1P1ZwrEYq/PTrKTyBHw27k7dx9cfwWZp73t21wfg7lc3aKIQTYyxurKAaRisLC1w
      7do5Prsxh9vt4DvvX6WeS/Ll7bt8dTdJsbRNwONkbeEhC5kGt258xZVRPzeWGuRWZph9OIVa
      L7CyliJj+LGqeS5fvsI//OSnXJ0c5uaTHdwOiQ9/5z3WFx4xMPEeNz//jGoxz9b6IrI7zO1b
      X/He5TE2shWWV9eJx2ME3Dr/+Mt72CvrPF6cZ7PhYWI0xt1f/zNrhRLbSwukiirZ7RROq0Q6
      uYjvwrvk1jZQJBWHpOGMn0NXDe7f/pJyNk3s4lXmZp/wnfevocgS24sPoX+ciN8NpsmvP/sl
      itNHYsiHpkSIOutcuv4B//t//QO57TWmnyzxu7//PWzNHEbwHCNBG4rDhdwsMreW5+mTh8Td
      DaaXt6naIxjlbWS1wvriMuG33qfPKLO8usqte/P4fC7+xQeX+fHf7S57fnGZK9evk0rtMHlh
      lMezi3z3e99j6uaXOKwKt379z1QrNVyD48xOP6aY3iDodbG+cJ8HKxkyRYPs6iwrSzOU6hpr
      OxXOnYm39fXT9QfBDm+IH/zhn/DWeGzvvn6/h9u3HxKMRjCqedZ3CvRFx5j+8ja/98Eg2ZqN
      +dlHOL0+MA0Gz4wT9ntwOZ1IEoSCAdzhUSZG46RXF8gUawCE+pzcffiEYDC4ty5JsbIwPYU3
      EN69w+Lg8qULeKwGM3NPweomEXLxxc0pUOzIap61XB2v08bFS5PYLQrjIxGWNxtkU4skxi7s
      Ldvj62Pu4QNqqr7v9w74+xg+P0nQrRMaGMOmSADMrWU4PxT6uj5JQgFe2GNRbPi9Ti5cvsqZ
      iI+pu/dRnD6Scw9Jra1SrGl7D7U5HFgVGZvTzcbSYwqV3V26cGyAx1N3WJx9RKah4LRaCNgl
      Hj7derbst4kH3Tx6OE3z2f5SMZPi/336C0YvTPJoZgFfnwfDlHA4HDhdTiwWhcfT07h9fiTJ
      RmF7ha1MmUAohGL3cen8mTd5iXwr6ahOg+bzefx+/1Es+gWGYSDLMqZp8vxXkSTphfuRJORn
      90mSxO5d5u6xgiSBufcHmOaLzzeM3ec/W9Y3l3vQfc/XDyaGsfsYwzCQZHmvBp6tFqRn9bxY
      u2maSM8e9Lzmbz7nef3Pl/+8FkOt8sWdGX73g+tIsFcbgCw/f68zARnTNDBNkOWvf9fn63q+
      vt2SzL317v38G7V9/Tz56zF99tzny5YkGVkGQzcwkZAVaXdc+XpZX4/97nMNtcHt2zdZy9T4
      4Z/8wd66ntfWLl0fgF5Uq9WwWq1YLJaTLqXrdf0uUKsMvc5GKo2p1SmU6iddzisxDIOuuH5p
      6mSzeUy9QaFUO+lqDtTzAdC0Ck+m56hWc6xv7z/tJ7RAUtjaSPL06Qqy1XrS1Ryo5wMAEsOJ
      OMnkxkkXciqNDsfIVAw8js7cXev5AEiSjMMbwC7rWKzKSZdz6ljtTgJ+L+09dG0fcRDchSqV
      CjabDWuH7lZ0k73tUqVSaWv7QrVabduyhBc1Gg0sFguKIrZYrdoLgNvtbvvCxRbgaIgtQPv0
      /DGA0NtEAISeJgIg9DQRAKGniQAIPe21L8+ZusbMva+ITX4XPZ8ktZ2lPz6KrFdRDA1HIIrX
      Kc5OCN3h9QNgmoT9LmoaRENh8sUy9UaT7Po8Nk+UKzELuq5jmia6vr+PvZtIP/858tF8XuiV
      GX/xF5h//dcv3mcYGIbR9ePbCV47ALLFitVqQQWQFYIBH6lsGYfTjaY1d7vNn/Vtt7t3+7hJ
      2SzcunWyNXz44fMPAnx937Ox7fbx7QSvHYBmrcTKVhmztAB9FjK5IpGhMyiGB4cChUqDgGf3
      o5BffwijS3XAC0ySJKSXxvH5i7/rx7cDvHYAbE4vV9/7zt7twURb6xGEYyXeQoSeJgIg9DQR
      AKGniQAIPU0EQOhpIgBCTxMBEHraawfANE12NlaoNKFWzjM9PUOp2qRQLFAt5ak0tN++EEHo
      EK8dAENtkEk9Jd8AzZA4eybGyuoG25sbLDxdxS5mVhC6yGtfCVZsDiLhEFXAIuk8Xtpk4uIE
      t2/8Am/4HIoEuq5jGMbeHPbdStJ1TjrOhmFgvDSOuq6j67roBWqDN+oFWlzZRMs52dGyyFYn
      uUKJxNhFrIZKrtIg6HEgy3L3z13ZAbMuyLKM/NI4KoqCoijdP74d4I16ga7/3r/c/4OQrx31
      CMKxEmeBhJ4mAiD0NBEAoaeJAAg9TQRA6GkiAEJPEwEQepoIgNDTXjsAulpn6sYv2apAIbPJ
      r7+8DUAyucLq0jzFWvu+Y0AQjtobzAtk48zQADUDvIEBAt4dAFafPqYvco4hh0X0ArWR6AU6
      Wq8dgN0vRN4d+G/OSzMQS1CtltAMsCqK6AVqE9ELdLTeqBluLashVRZQ+mw0mxprmxki0UHs
      Folao4nVZT+KWgWh7d6oGe7K1Xf2bkcHh1/4uXjpC91EnAUSepoIgNDTRACEniYCIPQ0EQCh
      p4kACD1NBEDoaW8UgGoxS0MDQ2uw9HQF3TSpVquo9Sr1Zne3Pwi95fWb4Zo15h7eIl2Dudkn
      BLw25pdTrK+v8mRuHlkRGxWhe7zBxFhORhJxqgBWO/5gkK1Miu3UEt7oBFZZEs1wbSSa4Y7W
      G/UCzS8maQacDLlNpu4+IDx0Fqv1HIpWI1tuEPKKibHa5dQ2w336KfzZn51sDX/+52/WC/T+
      9/947/aZvb8F2lKT0CNUFTKZk62hVBJngYTeJgIg9DQRAKGniQAIPU0EQOhpIgBCTxMBEHqa
      CIDQ01q6lJhKLrGZzjN89iLNSg7FUHEG43id1nbVJwhHqqUApAtlrlwc59HSOs3CGg7/IFfi
      uxNjmabZ9b1AsmGc+CbytPYCSYZx8n1WptlaAEYTcWafLCA7Q3h8PprNBga7/SuSJKF0QC9N
      SzrgBXbQOMqyjCzL3T2+HTK2LQWg2WyAxcX5sQSVogeHAqVKA7/HsbeCrtYB9UuStK8OSZL2
      /utaHVC7RIu7QMGBQYIDgwA4Qv3tqEkQjtVJ7+IKwokSARB62qEBMPU6mWyeqTt30QzzOGsS
      hGNz6DFAKfmQXz0uIZe28Y1eYjxoO866BOFYHLoF8CYuI9eKXLr2PvG+Lv7onSB8i0MDUN1e
      ZDNXoJbfYbOkH2dNgnBsDg2AIzCIV1G5NbNC2NPFF1wE4VscGoBmvcrQxDskggqV+sEHwYam
      ks3m0A0TVVXRNRVNN46sWEFotwN37tVqgU8/v8nswylc0Qu8e8gG4MnMNC6vm81cBZtZRa3V
      GblwCYvYYAhd4uCjW0kiFoui897uzUOebLPJbO9kCA2eZWPuAb74JE6rLCbGaqNT2wzXCWN7
      WDOcYnOSiEdx+KP43XbctoP3lGoNjVAoQK1cJpo4i9EoUqyp+Fw2MTFWm5zaibE6YWwPa4aT
      FStep8LHn37F+9cm8fdHsR2wHZi8/BaVWh23y41h6CiyhG5277uS0HsOPQhWGzXOTVygmtmk
      2Dj4wFZWLHg9HmRZwmKxIMkKFjE5rtBFDt2GfvHZz1loxghYNMaui3d14XQ6MACmoXLl93/I
      OxaJ6fk1Ak7xri6cTge+shvZddaKGndu3iQoF1jJqcddlyAciwMDYA/EyMzdwhO/gDcQIySu
      BAun1IG7QJJi5w//zb877loE4dgdciU4z0/+538nY/RhaZb5Vz/690S9XXzOWRAOceAukNXl
      54//4PsMxEY4E/HTFB+IEU6pQ9/WFU+Yi6MWvL4LDB7yeYCN5BLpXAF3ME6fU8Zq6ijeEF6H
      mBhL6A6HBsBsVvjsVze49vZF/IEQHvv+awHx4TGs8hKGx8vmygym7OZKfwTD2L1w9vzPbiWZ
      5qF9UMfFNE3Ml8bRNE1M0+zq8e2IseWQAOjNOpuZErGwj9TGBucvH7YLZLKVr3FpyMXakxqK
      y8PzRz7/R+pqnfCPdMA4Pr+vq8e3A8aWw2eGM1F1GByM01Q1bMrBparlLP3xUSRgcOQcdlkn
      X2kQ9DhOx8xw8slfAJRleV/j2KmYGa4DxvbQmeG0ao71bJVqbouQSyFT03Hb9xds9YSIPvt7
      NBrd93NB6HQH7wJpTabv3aJcKuJ3ygQv/+C46xKEY3FgAFz9Z/gPf/VXx12LIBy7g3uBcuv8
      6v/+jKVMk2azidHNB1uC8C0ODIDNNwC1IlNffs7nn39OqSECIJxOBwZAkq189wd/BJUMmWwZ
      axefbBCEb3PouahaeoXA2LucDVtJV8XEWMLpdGgA3INvM2TPY4lMkBBTIwqn1KGvbK1WJDHx
      Lha1REM3cVj2XwwzDZ3F+XmiI+NIehOrDLpix2kTgRG6w6Gv1N988vcs6Qk8zTTf/dc/Iu7d
      v7GYn3mIqz+GDKxvrFKvNpi4/NZR1isIbXVoAK5++Ef4tiq4nRcIOQ8+Ci5Vajj7qjxdqZJP
      PcUbncAiIybGaiMxMdbR+dZviVQaWZ4kCwz5LUQTo9gP2AWKDgTZyuTxBWPERs6jaHWy5QYh
      r0NMjNUmYmKso3PoxFgAstNHbn0Ks+Ri4uoHYN//mMHRCwweZYWCcMQOPQskyTb8fS6KhTy6
      uBIsnFKHbwGsDmKxGG5Jo66LAAin06EBsDjcOGQdZextcR1AOLUOvxK8s0DaDGKmF1gvdffZ
      HEE4zOFfkeSLUNteYqsi4XOc/BG7IByFgz8QU8uxnDH44Q//LVvLC+J7goVT68AtgKE1eTw7
      Sy6fZ/7JYxqaCIBwOh24BbB6B3h3osCd23cYOneNiFvsAgmn0yGndyRiI+eJjZz/1ievryyQ
      KdQYHBmjUckjGyru0CBep5gYS+gOLZ3frNdqmKaBJMsklx7jDo0QGbSIXqA2Er1AR+dbe4Fe
      xdDoeSw0ebS4gT8Upt6oYZinZN4a6Ji5a14ex+e9QF09vh0yti0FoJzfYWM7x5mx8+iNMg4F
      SrUGfrdjbwVdrQPqlyTp0Dq6enw7oHaJFneBQpEhQpGh3Rvu3W45V6tVCcIxOvntkCCcIBEA
      oaeJAAg9TQRA6GkiAEJPEwEQepoIgNDTWg5AtVJG1Q2azSa62kTVuvd7q4Te01IATL3BnS8/
      ZyvfIJlc5snjWTTxAXqhi7R0Jfjxo0eEo1Fq9Tpbqwv44pM4LLJohmsj0Qx3dFpuhhuID7K1
      toyuqkQTZzGbJQrVJn63XUyM1SZiYqyj860TY72KUDhKMBTGRMY0Q8iShDgCELpJy28hkqw8
      +75X5Rv/F4TuIE6DCj1NBEDoaSIAQk8TARB6mgiA0NNEAISeJgIg9LSWrgPspJKktrNEEuNI
      eg2rqWHxhsXEWELXaPlKcFNVKZYqVLNJJGsfV8IxDMPANE0Mo8uvC5vmiW8iTdPEfGkcn49t
      V49vJ4wtLQbANE0MJHRVxdBVJMXEfOnn3UzqkPpfHsfnt7t5fDtlbFsKwPbmOrlcif7YMAHv
      WeyKQaHSIOBxHDijWdfpkNnLXh7HUzHzXieMLS0GIJYYI5ZoUzWCcAJOPoaCcIJEAISeJgIg
      9DQRAKGniQAIPU0EQOhpIgBCT2v5SrCu6/suyHTzdB1Cb2kpAOnNVbbTWWRXP1azitGoExu/
      iNchmuGE7tBSAMLRQbLZPIGgn7l7D/DFJ/HYxbdEtpOYGOvotDwx1tyj+7gHhulz2YkmxmlW
      C1SbOm67RUyM1SZiYqyj0/LEWJHBBIVylXrTRSIxglWRaRqd0eUnCK+ipQD4gmF8wRfvc7Sy
      QEE4ZuI0qNDTRACEnna8R1H1Ovzpnx7rKveJRuHHPz7ZGoSOcbwB0HX45JNjXeU+o6Mnu36h
      o4hdIKGniQAIPU0EQOhpLQVAa9ZYWFoGIJfLUc5nqNTVdtQlCMeipQDUanXyhRwA6Z0US8kN
      HPYuvjwv9JyWXq1eXwCnbQ2A7dQqnvA4MhzeDKdpx3zaaT8T0F+xSa8jGrZepxludRVOcrY4
      WYbEq82T0xFj22oz3M5Gku3tHXyhDCNnL2EzNXKVBkGP4+BmuA5o3pLg1ZvIOqFh63Wa4S5d
      glrtGKt7idcLxeKrPbYTxrbVZrhwfJjvx4fbVY8gHDtxFkjoaSIAQk8TARB6mgiA0NNaCoBp
      6BSLJUzTRNM0DE1D07v4SxuEntPSWaCluVkMSWan2I9Zz6PV6yTOT2JRxIZF6A4tvVJVrJw9
      N45aqbK5uoBq7cNtO/lz/YLwqloKgNVUWVhYwup2EU2cxaYVKdaa7apNEI5cS2/XYxcuUixX
      8Xo9GHoAWZLQze6dq0boPXsBqFQqqOqbdXIWC4V991Wr1f0PbDbhL//yjdbRNqEQ5POv9thI
      5OTrvXJlX72NRgOLxbL/O8J+9CN4w3/DtrDbX31sfb6TH9v33kMyj+irBvP5PH6//ygWfSQO
      muO0U1UqFWw2G1Zrd0xB2cljK07XPCN3wLcWnladPLbHXlkhvcHUvfukdnKv9bzV1eTXNyrb
      JLONttb1qvNslnMb3HmwQDW7wXr2oM7LKqvJTFtre1X1UoapqbusrG+/1vNeGNt6nuTOK3Z0
      vqJXHVutlubGzRnM8hYLm+UDHtFgNfl6v9tvc+znLFdTGd5++y0UyWRu+gHbZY140EF8eJzl
      5FPyWxkiI+MY1TQ72RKJxDCp7W1UAxKJBIuzj6iUMtiHrvHw3kOasgcnVaqlIpozgNftxWfT
      WFrLcOnCMEurOxiSTNAB6WyByfc+xGd/8wN13TChUSZfNqkhcWtxBtli4+rVK6w/fUKuXMRq
      izH76B75ukTULZOvlig1HXi9LgYDDhaW1hifPM/y4iqaAUP9LrZ2MgxfvE7U/+Zz662spJi8
      ehWHDEtPpkmmK5yLe/DGJ1l/+ohKrogvOozNKLO1kyE6OMbO1gY1zSSRGGZlfoZCIYd1YILH
      j+6Sq8sEnRLVUoGaxYPb6SbSZ2Exucn5s2dYSm6hAXGfja10nrNXrtPvtb9x/aahYzFVMvki
      lSbcuTWLjoVr199hZ3WB7XwB2dJPY/YBW0WVYb+T7WqZclXC5XYyHvMzt5hk5Ow4yeUkatNk
      eCjA1uYO0bFLJAZ8+9Z57FsAq2xSbWg0KyUKNZVyNktD11HVJo2mSSweoVDIkUql8Pn9lEpF
      xs5N4PfsvjCahoWJ8RHqlRwNzUI2s4PV1cfEeJzIyAR2RSedzWGUimxm8oxNTmJTDFKb2/iD
      AeQ2HPIMjY6ytrxMo1IkOHgGrxU0E6oNjcmJs5hqnUpNJZfNoFicTE6eJRRO4HFYSKezWKmw
      ldomOnYRt91CKpXC6w9ilVurzWWTKZbrqI06uWKZWi5HXdfR1Cb1hk40HqVYzJNKbeD1BVEb
      JWIj5wj5XABUVbh4fgzMGsWSSj6bRrK5uHQ+Qf/gWdx2iZ1MFrlZJ7W2xcjkJVw2mY2NTXwB
      P4rc+hnAgaFhtteTaI0qnlCMfpeFugHFSpPJi+exyga5fJliIYuJlYuXzhHqj+P3ONjZyWBX
      NHY2VgkMTeBz20ltbOD2BbBbDn6pKx999NFHLVd9gHq9jsOx/90s4PexvLiA7OxD1usEwlHi
      0RCra5sMDAzQrFXw+PtJRMMUq01GR0fYSD7F4+/H5/VgkVQ2MhVi0RhqvUw0Nkgw4MfpcmO1
      O3HZLVhlCbvXz+BQhNXFRapNk8nzo5RqGpGBMK1cqJZlGavNhcflIBgZpJHdwOYbINDnwmmV
      WV5PE4lGQWsQjMQIh4LYnU6sVjsetwOHVcG0uokNDbGzukS+0uDtSxfIFWtEIgNYX6E4VVX3
      PhTzTV6/n83kEk1s2BUDbzDMUDzGanKVcGQAo1nH4fFzZihGvlglceYMmdQKdm8Qf58Hh2KS
      3MwxEIliqjVCA7v1O5xurDY7bqcNm0VGdnhIDA+ytrRAsary9qVzFMoNBgbCWJQ3D4EkyVis
      DjxuJ75QBGpZcAUI+z14nBYWV1L0hyMoqPhCEQb6QzicLqxWGx63E5fDgoqdeCJBIbVCulDh
      nauXyeVLhAcGsFn3H4j/fy6qT4ZEjZtfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pilots and Prior Warning (2)' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 US Airlines' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 50 Airports' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='When Do ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Yearly Cost' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Yearly Strikes In USA' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
